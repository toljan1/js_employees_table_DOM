{"version":3,"sources":["scripts/main.js"],"names":["pushNotification","posTop","posRight","title","description","type","document","body","insertAdjacentHTML","message","querySelector","style","top","right","setTimeout","remove","sortBy","toNum","element","innerText","slice","replaceAll","isSorted","previousSort","addEventListener","el","columns","sorted","target","parentNode","children","i","parentEl","sortsEl","querySelectorAll","sort","el1","el2","localeCompare","append","reverse","length","tableBody","previousActive","removeAttribute","className","previousText","typeOfInput","cellInput","changedCell","submitButton","preventDefault","inputs","newTable","createElement","inputsValue","find","value","input","name","char","newCell","office","after","addTextFromInput","toLocaleString","toUpperCase","toLowerCase","callback","removeEventListener","focus","classList","add","includes","e","keyCode"],"mappings":"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","file":"main.207ebdc4.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// notification function\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  document.body.insertAdjacentHTML(`beforeend`, `\n    <div class = 'notification ${type}' data-qa = 'notification'>\n      <h2 class = 'title'>${title}</h2>\n      <p>${description}</p>\n    </div>\n  `);\n\n  const message = document.querySelector(`.${type}`);\n\n  message.style.top = `${posTop}px`;\n  message.style.right = `${posRight}px`;\n\n  setTimeout(() => message.remove(), 2000);\n};\n\n// #region sort region\n\n// we calculate with the help of which we will sort\nconst sortBy = document.querySelector('tr');\n\n// helper function to get number from salary\nfunction toNum(element) {\n  return +element.innerText.slice(1).replaceAll(',', '');\n}\n\n// helper variable for changed sort from asc to desc or reverse\nlet isSorted = false;\n\n// helper variable for changed isSorted variable\nlet previousSort = '';\n\nsortBy.addEventListener('click', el => {\n  const columns = el.target.parentNode.children;\n\n  if (previousSort !== el.target.innerText) {\n    isSorted = false;\n    previousSort = el.target.innerText;\n  }\n\n  let sorted;\n\n  for (let i = 0; i < columns.length; i++) {\n    if (el.target.parentNode.children[i].innerText === el.target.innerText) {\n      const parentEl = document.querySelector('tbody');\n      const sortsEl = parentEl.querySelectorAll('tr');\n\n      el.target.parentNode.children[i].innerText === 'Salary'\n        ? sorted = [...sortsEl].sort((el1, el2) =>\n          toNum(el1.children[i]) - toNum(el2.children[i]))\n        : sorted = [...sortsEl].sort((el1, el2) =>\n          el1.children[i].innerText.localeCompare(el2.children[i].innerText));\n\n      if (isSorted) {\n        isSorted = false;\n        parentEl.append(...sorted.reverse());\n      } else {\n        isSorted = true;\n        parentEl.append(...sorted);\n      }\n    }\n  }\n});\n\n// #endregion\n\n// #region add employee region\n\nconst tableBody = document.querySelector('tbody');\n\n// helper variable to check previous active table\nlet previousActive = null;\n\ntableBody.addEventListener('click', el => {\n  if (previousActive) {\n    previousActive.removeAttribute('class');\n  };\n\n  previousActive = el.target.parentNode;\n  el.target.parentNode.className = 'active';\n});\n\nconst body = document.querySelector('body');\n\n// added a form for add employer\nbody.insertAdjacentHTML(`beforeend`, `\n  <form class = 'new-employee-form'>\n    <label data-qa=\"name\">\n      Name:\n      <input name=\"name\" type=\"text\">\n    </label>\n\n    <label data-qa=\"position\">\n      Position:\n      <input name=\"position\" type=\"text\">\n    </label>\n\n    <label data-qa=\"office\">\n    Office:\n    <select>\n        <option>Tokyo</option>\n        <option>Singapore</option>\n        <option>London</option>\n        <option>New York</option>\n        <option>Edinburgh</option>\n        <option>San Francisco</option>\n    </select>\n    </label>\n\n    <label data-qa=\"age\">\n      Age:\n      <input name=\"age\" type=\"number\">\n    </label>\n\n    <label data-qa=\"salary\">\n      Salary:\n      <input name=\"salary\" type=\"number\">\n    </label>\n\n    <button type = 'submit'>\n      Save to table\n    </button>\n  </form>\n`);\n\nconst submitButton = document.querySelector('button');\n\nsubmitButton.addEventListener('click', el => {\n  el.preventDefault();\n\n  const inputs = document.querySelectorAll('input');\n\n  const newTable = document.createElement('tr');\n\n  // helper variable for check the input value is empty which return boolean\n  const inputsValue = [...inputs].find(element => element.value === '');\n\n  for (const input of inputs) {\n    if (inputsValue) {\n      pushNotification(10, 10, 'Error',\n        'All fields must be filled', 'error');\n\n      break;\n    }\n\n    if (input.name === 'name') {\n      if (input.value.length < 4) {\n        pushNotification(10, 10, 'Error',\n          'The name must contain more than 4 letters', 'error');\n\n        break;\n      }\n    }\n\n    if (input.name === 'age') {\n      if (+input.value < 18 || +input.value > 90) {\n        pushNotification(10, 10, 'Error',\n          'The age value should be between 18 and 90 years', 'error');\n\n        break;\n      }\n    }\n\n    if (input.name === 'salary') {\n      if (+input.value < 0) {\n        pushNotification(10, 10, 'Error',\n          'Salary cannot be negative', 'error');\n        break;\n      }\n\n      // loop which add input value to table cell\n      for (const char of inputs) {\n        const newCell = document.createElement('td');\n\n        if (char.name === 'salary') {\n          newCell.innerText = '$' + `${char.value}`;\n        } else {\n          newCell.innerText = char.value;\n        }\n\n        newTable.append(newCell);\n\n        tableBody.append(newTable);\n\n        char.value = '';\n      }\n\n      pushNotification(10, 10, 'Perfectly',\n        'A new employee is successfully added to the table', 'success');\n    }\n  }\n\n  const office = document.createElement('td');\n\n  office.innerText = document.querySelector('select').value;\n\n  newTable.children[1].after(office);\n});\n\n// #endregion\n\n// #region edit data region\n\n// helper variable for save previous data\nlet previousText;\n\n// helper variable to change input type\nlet typeOfInput;\n\n// helper variable to work with a input in cell\nlet cellInput;\n\n// helper variable to change cell which now is open to changed\nlet changedCell;\n\n// helper function to add to table cell text from input\nconst addTextFromInput = () => {\n  const value = cellInput.value;\n\n  if (value === '') {\n    changedCell.innerText = previousText;\n\n    return;\n  }\n\n  if (cellInput.type === 'number') {\n    if (previousText.slice(0, 1) === '$') {\n      if (+value > 0) {\n        changedCell.innerText = '$' + (+value).toLocaleString('en-US');\n\n        return;\n      }\n\n      pushNotification(10, 10, 'Error',\n        'Salary cannot be negative', 'error');\n\n      return;\n    }\n\n    if (value > 90 || value < 18) {\n      pushNotification(10, 10, 'Error',\n        'The age value should be between 18 and 90 years', 'error');\n\n      return;\n    }\n\n    changedCell.innerText = value;\n\n    return;\n  }\n\n  if (cellInput.type === 'text') {\n    changedCell.innerText = `${value.slice(0, 1).toUpperCase()}`\n     + `${value.slice(1).toLowerCase()}`;\n  }\n};\n\nconst callback = el => {\n  changedCell = el.target;\n\n  // disabled the event until the moment will be added value from input\n  tableBody.removeEventListener('dblclick', callback);\n\n  previousText = changedCell.innerText;\n\n  cellInput = document.createElement('input');\n\n  cellInput.focus();\n\n  cellInput.classList.add('cell-input');\n\n  // check is this cell is number type or not\n  if ('1234567890'.includes(changedCell.innerText.slice(1, 2))) {\n    typeOfInput = 'number';\n  } else {\n    typeOfInput = 'text';\n  }\n\n  cellInput.type = typeOfInput;\n\n  changedCell.innerText = '';\n\n  changedCell.append(cellInput);\n\n  cellInput.addEventListener('blur', () => {\n    addTextFromInput();\n    tableBody.addEventListener('dblclick', callback);\n  });\n\n  cellInput.addEventListener('keypress', e => {\n    if (e.keyCode === 13) {\n      tableBody.addEventListener('dblclick', callback);\n      addTextFromInput();\n    }\n  });\n};\n\ntableBody.addEventListener('dblclick', callback);\n\n// #endregion\n"]}